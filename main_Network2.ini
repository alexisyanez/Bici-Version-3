[General]
cmdenv-express-mode = true
network = Main_Network
sim-time-limit = 650s



##########################################################
#			Simulation parameters                        #
##########################################################
tkenv-default-config = 
Main_Network.**.coreDebug = true
Main_Network.playgroundSizeX = 3000m
Main_Network.playgroundSizeY = 800m
Main_Network.playgroundSizeZ = 800m
Main_Network.numNodes = 4

##########################################################
#			WorldUtility parameters                      #
##########################################################
Main_Network.world.useTorus = false

##########################################################
#			         channel parameters                  #
Main_Network.connectionManager.sendDirect = true
Main_Network.connectionManager.pMax = 100mW
Main_Network.connectionManager.sat = -94dBm
Main_Network.connectionManager.alpha = 2.0
Main_Network.connectionManager.carrierFrequency = 2.412e+9Hz


################ PhyLayer parameters #####################
Main_Network.node[*].nic.phy.usePropagationDelay = true
Main_Network.node[*].nic.phy.thermalNoise = -100dBm
Main_Network.node[*].nic.phy.useThermalNoise = true
        
Main_Network.node[*].nic.phy.analogueModels = xmldoc("config.xml")
#Main_Network.node[*].nic.phy.decider = xmldoc("config.xml")

Main_Network.node[*].nic.phy.timeRXToTX = 0.00021s
Main_Network.node[*].nic.phy.timeRXToSleep = 0.000031s

Main_Network.node[*].nic.phy.timeTXToRX = 0.00012s
Main_Network.node[*].nic.phy.timeTXToSleep = 0.000032s

Main_Network.node[*].nic.phy.timeSleepToRX = 0.000102s
Main_Network.node[*].nic.phy.timeSleepToTX = 0.000203s

Main_Network.node[*].nic.phy.sensitivity = -94dBm
Main_Network.node[*].nic.phy.maxTXPower = 100.0mW

Main_Network.node[*].nic.phy.initialRadioState = 0

################ MAC layer parameters ####################
Main_Network.node[*].nic.mac.rxSetupTime = 0s
Main_Network.node[*].nic.mac.useMACAcks = false
Main_Network.node[*].nic.mac.queueLength = 5
Main_Network.node[*].nic.mac.headerLength = 24bit
#Main_Network.node[*].nic.mac.bitrate = 15360bps
Main_Network.node[*].nic.mac.contentionWindow = 20
Main_Network.node[*].nic.mac.txPower = 100mW  # [mW]
Main_Network.node[*].nic.mac.aTurnaroundTime = 0.000215s

################ NETW layer parameters ####################
Main_Network.node[*].networkType = "BaseNetwLayer"
Main_Network.node[*].netwl.stats = false
Main_Network.node[*].netwl.headerLength = 32bit

################ Mobility parameters #####################
**.mobility.initFromDisplayString = false

#Intervalo de actualización de la posición (llamado a move)
Main_Network.node[*].mobility.updateInterval = 1 s
Main_Network.node[*].mobility.initFromDisplayString = false
Main_Network.node[*].mobility.angle = 0deg
#Rectangle Mobility
#Main_Network.node[0].mobility.startPosition = 3.4
#Main_Network.node[1].mobility.startPosition = 3.395
#Main_Network.node[2].mobility.startPosition = 3.390
#Main_Network.node[3].mobility.startPosition = 3.385

Main_Network.node[*].mobility.initialY = 400 m
Main_Network.node[*].mobility.initialZ = 0 m
Main_Network.node[0].mobility.initialX = 40 m
Main_Network.node[1].mobility.initialX = 35 m
Main_Network.node[2].mobility.initialX = 30 m
Main_Network.node[3].mobility.initialX = 25 m


#Other parameters
#Distancia a la meta
#Tiempo objetivo para llegar a la meta
Main_Network.node[*].mobility.totalTime = 586 s
#Variabilidad de la velocidad objetivo del lider
Main_Network.node[*].mobility.variability = 0.1
Main_Network.node[*].mobility.acceleration = 0
Main_Network.node[0].mobility.leader = true
Main_Network.node[*].mobility.leader = false
#Main_Network.node[2].mobility.leader = false
#Main_Network.node[3].mobility.leader = false
Main_Network.node[*].totalDist = 2400 m


################ Platoon parameters ########################

#Alpha values of CACC
Main_Network.node[*].appl.alpha1 = 0.5
Main_Network.node[*].appl.alpha2 = 0.5
Main_Network.node[*].appl.alpha3 = 0.3
Main_Network.node[*].appl.alpha4 = 0.1
Main_Network.node[*].appl.alpha5 = 0.04

#Alpha values of CACC with lag
Main_Network.node[*].appl.alphaLag = 0.8

#Parámetros que se introducen segun el escenario
Main_Network.node[*].appl.mean_error = 0.4125
Main_Network.node[*].appl.std_error = 2.39
Main_Network.node[*].appl.mean_vel_obj = 14.2484

#Value for spacing error
Main_Network.node[*].appl.lenghtVehicle = 2
Main_Network.node[*].appl.spacing = 2

#Interval for sending position updates
Main_Network.node[*].appl.beaconInterval = 0.1 s

#Interval for running the platton 
Main_Network.node[*].appl.platoonInterval = 1 s



################ Application parameters #####################
Main_Network.node[*].applicationType = "CustomAppLayer"
Main_Network.node[*].appl.debug = false
Main_Network.node[*].appl.headerLength = 512bit
Main_Network.node[*].appl.burstSize = 1 

############### Battery parameters ############################
Main_Network.node[*].battery.nominal = 99999mAh
Main_Network.node[*].battery.capacity = 99999mAh
Main_Network.node[*].battery.voltage = 3.3V
Main_Network.node[*].battery.resolution = 10s
Main_Network.node[*].battery.publishDelta = 0.1
Main_Network.node[*].battery.publishTime = 0
Main_Network.node[*].battery.numDevices = 1  # only the PHY module uses energy from the battery
Main_Network.node[*].batteryStats.debug = false
Main_Network.node[*].batteryStats.detail = false
Main_Network.node[*].batteryStats.timeSeries = false

############## Beaconing parameters ###########################
Main_Network.node[*].appl.beaconing = false

##### Configurations ######

#########################################################################################
# Escenarios realizados para estudiar performances del platoon con error humano incluido#
#########################################################################################

# Escenario que permite estudiar la mínima cantidad de potencia para realizar el patoon con 8 nodos
[Config Beaconing-PowerVariation-minimun]
sim-time-limit = 650s

Main_Network.node[*].appl.mean_error = 0.214
Main_Network.node[*].appl.std_error = 0.46  
Main_Network.node[*].appl.mean_vel_obj = 4.1667

Main_Network.node[*].mobility.speed = 4.32 mps       
Main_Network.node[*].mobility.variability = 0.039  

Main_Network.node[0].mobility.leader = true
Main_Network.node[1].mobility.leader = false
#Main_Network.node[2].mobility.leader = false
#Main_Network.node[3].mobility.leader = false
#Main_Network.node[4].mobility.leader = false
#Main_Network.node[5].mobility.leader = false
#Main_Network.node[6].mobility.leader = false
#Main_Network.node[7].mobility.leader = false

Main_Network.node[*].appl.beaconing = true
Main_Network.node[*].appl.spacing = 5
Main_Network.node[0].mobility.initialX = ${1m, 3m, 6m, 10m, 15m, 20m}
Main_Network.node[1].mobility.initialX = 0m
#Main_Network.node[2].mobility.initialX = 15m
#Main_Network.node[3].mobility.initialX = 10m
#Main_Network.node[4].mobility.initialX = 5m
#Main_Network.node[5].mobility.initialX = 0m
#Main_Network.node[6].mobility.initialX = 5m
#Main_Network.node[7].mobility.initialX = 0m


Main_Network.connectionManager.pMax = ${pMax= 1mW, 0.002mW, 0.0025mW, 0.003mW, 0.0035mW} 
Main_Network.node[*].nic.phy.maxTXPower = ${TxMaxPower= 1mW, 0.002mW, 0.0025mW, 0.003mW, 0.0035mW ! pMax} 
Main_Network.node[*].nic.mac.txPower = ${TxPower= 1mW, 0.002mW, 0.0025mW, 0.003mW, 0.0035mW ! pMax}  
Main_Network.numNodes = 2


