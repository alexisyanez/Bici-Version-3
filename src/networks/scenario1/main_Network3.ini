[General]
cmdenv-express-mode = true
network = Main_Network
sim-time-limit = 600s



##########################################################
#			Simulation parameters                        #
##########################################################
tkenv-default-config = 
Main_Network.**.coreDebug = true
Main_Network.playgroundSizeX = 3000m
Main_Network.playgroundSizeY = 800m
Main_Network.playgroundSizeZ = 800m
Main_Network.numNodes = 4

##########################################################
#			WorldUtility parameters                      #
##########################################################
Main_Network.world.useTorus = false

##########################################################
#			         channel parameters                  #
Main_Network.connectionManager.sendDirect = true
Main_Network.connectionManager.pMax = 100mW
Main_Network.connectionManager.sat = -94dBm
Main_Network.connectionManager.alpha = 2.0
Main_Network.connectionManager.carrierFrequency = 2.412e+9Hz


################ PhyLayer parameters #####################
Main_Network.node[*].nic.phy.usePropagationDelay = true
Main_Network.node[*].nic.phy.thermalNoise = -100dBm
Main_Network.node[*].nic.phy.useThermalNoise = true
        
Main_Network.node[*].nic.phy.analogueModels = xmldoc("config.xml")
#Main_Network.node[*].nic.phy.decider = xmldoc("config.xml")

Main_Network.node[*].nic.phy.timeRXToTX = 0.00021s
Main_Network.node[*].nic.phy.timeRXToSleep = 0.000031s

Main_Network.node[*].nic.phy.timeTXToRX = 0.00012s
Main_Network.node[*].nic.phy.timeTXToSleep = 0.000032s

Main_Network.node[*].nic.phy.timeSleepToRX = 0.000102s
Main_Network.node[*].nic.phy.timeSleepToTX = 0.000203s

Main_Network.node[*].nic.phy.sensitivity = -94dBm
Main_Network.node[*].nic.phy.maxTXPower = 100.0mW

Main_Network.node[*].nic.phy.initialRadioState = 0

################ MAC layer parameters ####################
Main_Network.node[*].nic.mac.rxSetupTime = 0s
Main_Network.node[*].nic.mac.useMACAcks = false
Main_Network.node[*].nic.mac.queueLength = 5
Main_Network.node[*].nic.mac.headerLength = 24bit
#Main_Network.node[*].nic.mac.bitrate = 15360bps
Main_Network.node[*].nic.mac.contentionWindow = 20
Main_Network.node[*].nic.mac.txPower = 100mW  # [mW]
Main_Network.node[*].nic.mac.aTurnaroundTime = 0.000215s

################ NETW layer parameters ####################
Main_Network.node[*].networkType = "BaseNetwLayer"
Main_Network.node[*].netwl.stats = false
Main_Network.node[*].netwl.headerLength = 32bit

################ Mobility parameters #####################
**.mobility.initFromDisplayString = false

#Intervalo de actualización de la posición (llamado a move)
Main_Network.node[*].mobility.updateInterval = 1 s
Main_Network.node[*].mobility.initFromDisplayString = false
Main_Network.node[*].mobility.angle = 0deg
#Rectangle Mobility
#Main_Network.node[0].mobility.startPosition = 3.4
#Main_Network.node[1].mobility.startPosition = 3.395
#Main_Network.node[2].mobility.startPosition = 3.390
#Main_Network.node[3].mobility.startPosition = 3.385

Main_Network.node[*].mobility.initialY = 400 m
Main_Network.node[*].mobility.initialZ = 0 m

#Main_Network.node[0].mobility.initialX = 45 m
#Main_Network.node[1].mobility.initialX = 40 m
#Main_Network.node[2].mobility.initialX = 35 m
#Main_Network.node[3].mobility.initialX = 30 m
#Main_Network.node[4].mobility.initialX = 25 m
#Main_Network.node[5].mobility.initialX = 20 m
#Main_Network.node[6].mobility.initialX = 15 m
#Main_Network.node[7].mobility.initialX = 10 m
#Main_Network.node[8].mobility.initialX = 5 m
#Main_Network.node[9].mobility.initialX = 0 m

Main_Network.node[0].mobility.leader = true
Main_Network.node[1].mobility.leader = false
Main_Network.node[2].mobility.leader = false
Main_Network.node[3].mobility.leader = false
Main_Network.node[4].mobility.leader = false
Main_Network.node[5].mobility.leader = false
Main_Network.node[6].mobility.leader = false
Main_Network.node[7].mobility.leader = false
Main_Network.node[8].mobility.leader = false
Main_Network.node[9].mobility.leader = false
Main_Network.node[10].mobility.leader = false
Main_Network.node[11].mobility.leader = false
Main_Network.node[12].mobility.leader = false
Main_Network.node[13].mobility.leader = false
Main_Network.node[14].mobility.leader = false
Main_Network.node[15].mobility.leader = false
Main_Network.node[16].mobility.leader = false
Main_Network.node[17].mobility.leader = false
Main_Network.node[18].mobility.leader = false
Main_Network.node[19].mobility.leader = false
Main_Network.node[20].mobility.leader = false
Main_Network.node[21].mobility.leader = false
Main_Network.node[22].mobility.leader = false
Main_Network.node[23].mobility.leader = false
Main_Network.node[24].mobility.leader = false
Main_Network.node[25].mobility.leader = false
Main_Network.node[26].mobility.leader = false
Main_Network.node[27].mobility.leader = false
Main_Network.node[28].mobility.leader = false
Main_Network.node[29].mobility.leader = false

Main_Network.node[0].mobility.initialX = 145 m
Main_Network.node[1].mobility.initialX = 140 m
Main_Network.node[2].mobility.initialX = 135 m
Main_Network.node[3].mobility.initialX = 130 m
Main_Network.node[4].mobility.initialX = 125 m
Main_Network.node[5].mobility.initialX = 120 m
Main_Network.node[6].mobility.initialX = 115 m
Main_Network.node[7].mobility.initialX = 110 m
Main_Network.node[8].mobility.initialX = 105 m
Main_Network.node[9].mobility.initialX = 100 m
Main_Network.node[10].mobility.initialX = 95 m
Main_Network.node[11].mobility.initialX = 90 m
Main_Network.node[12].mobility.initialX = 85 m
Main_Network.node[13].mobility.initialX = 80 m
Main_Network.node[14].mobility.initialX = 75 m
Main_Network.node[15].mobility.initialX = 70 m
Main_Network.node[16].mobility.initialX = 65 m
Main_Network.node[17].mobility.initialX = 60 m
Main_Network.node[18].mobility.initialX = 55 m
Main_Network.node[19].mobility.initialX = 50 m
Main_Network.node[20].mobility.initialX = 45 m
Main_Network.node[21].mobility.initialX = 40 m
Main_Network.node[22].mobility.initialX = 35 m
Main_Network.node[23].mobility.initialX = 30 m
Main_Network.node[24].mobility.initialX = 25 m
Main_Network.node[25].mobility.initialX = 20 m
Main_Network.node[26].mobility.initialX = 15 m
Main_Network.node[27].mobility.initialX = 10 m
Main_Network.node[28].mobility.initialX = 5 m
Main_Network.node[29].mobility.initialX = 0 m




#Other parameters
#Distancia a la meta
#Tiempo objetivo para llegar a la meta
Main_Network.node[*].mobility.totalTime = 586 s
#Variabilidad de la velocidad objetivo del lider
Main_Network.node[*].mobility.variability = 0.1
Main_Network.node[*].mobility.acceleration = 0
#Main_Network.node[0].mobility.leader = true
#Main_Network.node[*].mobility.leader = false
#Main_Network.node[0].mobility.leader = true
#Main_Network.node[2].mobility.leader = false
#Main_Network.node[3].mobility.leader = false
Main_Network.node[*].totalDist = 2400 m


################ Platoon parameters ########################

#Alpha values of CACC
Main_Network.node[*].appl.alpha1 = 0.5
Main_Network.node[*].appl.alpha2 = 0.5
Main_Network.node[*].appl.alpha3 = 0.3
Main_Network.node[*].appl.alpha4 = 0.1
Main_Network.node[*].appl.alpha5 = 0.04

#Alpha values of CACC with lag
Main_Network.node[*].appl.alphaLag = 0.8

#Parámetros que se introducen segun el escenario
Main_Network.node[*].appl.mean_error = 0.4125
Main_Network.node[*].appl.std_error = 2.39
Main_Network.node[*].appl.mean_vel_obj = 14.2484

#Value for spacing error
Main_Network.node[*].appl.lenghtVehicle = 2
Main_Network.node[*].appl.spacing = 2

#Interval for sending position updates
Main_Network.node[*].appl.beaconInterval = 0.1 s

#Interval for running the platton 
Main_Network.node[*].appl.platoonInterval = 1 s



################ Application parameters #####################
Main_Network.node[*].applicationType = "CustomAppLayer"
Main_Network.node[*].appl.debug = false
Main_Network.node[*].appl.headerLength = 512bit
Main_Network.node[*].appl.burstSize = 1 

############### Battery parameters ############################
Main_Network.node[*].battery.nominal = 99999mAh
Main_Network.node[*].battery.capacity = 99999mAh
Main_Network.node[*].battery.voltage = 3.3V
Main_Network.node[*].battery.resolution = 10s
Main_Network.node[*].battery.publishDelta = 0.1
Main_Network.node[*].battery.publishTime = 0
Main_Network.node[*].battery.numDevices = 1  # only the PHY module uses energy from the battery
Main_Network.node[*].batteryStats.debug = false
Main_Network.node[*].batteryStats.detail = false
Main_Network.node[*].batteryStats.timeSeries = false

############## Beaconing parameters ###########################
Main_Network.node[*].appl.beaconing = false

############## GPS error parameters ###########################
Main_Network.node[*].appl.GPS_error = false

############## RRT parameters ###########################
Main_Network.node[*].appl.RTT_on = false

############## Incluir MultiSpeed ###########################
Main_Network.node[*].mobility.MultiSpeed = false

############## Incluir Umbral ###########################
Main_Network.node[*].appl.Thr_Ac = 0

##### Configurations ######

#########################################################################################
# Escenarios realizados para estudiar performances del platoon con error humano incluido#
#########################################################################################

# Escenario para observar la inclusion del error en la medicion de la posicion obtenida por el GPS
[Config GPS-error] 

# Definir valores para el error humano
Main_Network.node[*].appl.mean_error = 0.214   #${ mean= -0.1934, -0.1934, 0.214, 0.214, 0.429, 0.429}  #Para velocidades 10,15 y 18 el error humano es diferente 
Main_Network.node[*].appl.std_error = 0.46  #${ std= 0.432, 0.432, 0.46, 0.46, 0.889, 0.889 ! mean}  
Main_Network.node[*].appl.mean_vel_obj = 4.1667   #${ vel= 2.77, 2.77, 4.1667, 4.1667, 5, 5 ! mean}

# Definir valores de la velocidad segun corresponda para cada iteración 
Main_Network.node[*].mobility.speed = 4.32 mps    #${speed= 3.3 mps, 3.7 mps, 4.32 mps, 4.63 mps, 5.36 mps , 5.84mps ! mean}       
Main_Network.node[*].mobility.variability = 0.039   #${varia= 0.012,  0.243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo

# Valores para el erro del GPS, se obtuvieron al comparar con distribucioón de estudio empírico 
Main_Network.node[*].appl.GPS_error = true # Activa el error de GPS en el calculo del CACC
Main_Network.node[*].appl.position_error_a = 5  # Valor mas común en el error
Main_Network.node[*].appl.position_error_b = 1.5 # Define la desviación de los datos

# Beaconing
Main_Network.node[*].appl.beaconing = true
Main_Network.numNodes = 4

# Potencia Suficiente
Main_Network.connectionManager.pMax = 0.003mW
Main_Network.node[*].nic.phy.maxTXPower = 0.003mW
Main_Network.node[*].nic.mac.txPower = 0.003mW

#repeat = 10

# Escenario para observar la inclusion del error humano sin error en el GPS
[Config SinGPS-error] 

# Definir valores para el error humano
Main_Network.node[*].appl.mean_error = 0.214   #${ mean= -0.1934, -0.1934, 0.214, 0.214, 0.429, 0.429}  #Para velocidades 10,15 y 18 el error humano es diferente 
Main_Network.node[*].appl.std_error = 0.46  #${ std= 0.432, 0.432, 0.46, 0.46, 0.889, 0.889 ! mean}  
Main_Network.node[*].appl.mean_vel_obj = 4.1667   #${ vel= 2.77, 2.77, 4.1667, 4.1667, 5, 5 ! mean}

# Definir valores de la velocidad segun corresponda para cada iteración 
Main_Network.node[*].mobility.speed = 4.32 mps    #${speed= 3.3 mps, 3.7 mps, 4.32 mps, 4.63 mps, 5.36 mps , 5.84mps ! mean}       
Main_Network.node[*].mobility.variability = 0.039   #${varia= 0.012,  0.243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo

# Beaconing
Main_Network.node[*].appl.beaconing = true
Main_Network.numNodes = 4

# Potencia Suficiente
Main_Network.connectionManager.pMax = 0.003mW
Main_Network.node[*].nic.phy.maxTXPower = 0.003mW
Main_Network.node[*].nic.mac.txPower = 0.003mW

#repeat = 10

# Escenario que implementa el calculo de la distancia a travez de RTT sin beaconing activado
# Aún no Funciona
[Config RTT-Sin_Beaconing] 

# Definir valores para el error
Main_Network.node[*].appl.mean_error = 0.214   #${ mean= -0.1934, -0.1934, 0.214, 0.214, 0.429, 0.429}  #Para velocidades 10,15 y 18 el error humano es diferente 
Main_Network.node[*].appl.std_error = 0.46  #${ std= 0.432, 0.432, 0.46, 0.46, 0.889, 0.889 ! mean}  
Main_Network.node[*].appl.mean_vel_obj = 4.1667   #${ vel= 2.77, 2.77, 4.1667, 4.1667, 5, 5 ! mean}

# Definir valores de la velocidad segun corresponda para cada iteración 
Main_Network.node[*].mobility.speed = 4.32 mps    #${speed= 3.3 mps, 3.7 mps, 4.32 mps, 4.63 mps, 5.36 mps , 5.84mps ! mean}       
#Main_Network.node[*].mobility.variability = 0.039   #${varia= 0.012,  0.243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo

#Activar RTT
Main_Network.node[*].appl.RTT_on = true

# Beaconing
Main_Network.node[*].appl.beaconing = false
Main_Network.numNodes = 4

# Potencia Suficiente
Main_Network.connectionManager.pMax = 1mW
Main_Network.node[*].nic.phy.maxTXPower = 1mW
Main_Network.node[*].nic.mac.txPower = 1mW

#Interval for sending position updates
Main_Network.node[*].appl.beaconInterval = 0.01 s

#Interval for running the platton 
Main_Network.node[*].appl.platoonInterval = 0.05 s

#repeat = 10

# Escenario que implementa el calculo de la distancia a travez de RTT con beaconing activado
# RTT aún no funciona
[Config RTT-Con_Beaconing] 

# Definir valores para el error
Main_Network.node[*].appl.mean_error = 0.214   #${ mean= -0.1934, -0.1934, 0.214, 0.214, 0.429, 0.429}  #Para velocidades 10,15 y 18 el error humano es diferente 
Main_Network.node[*].appl.std_error = 0.46  #${ std= 0.432, 0.432, 0.46, 0.46, 0.889, 0.889 ! mean}  
Main_Network.node[*].appl.mean_vel_obj = 4.1667   #${ vel= 2.77, 2.77, 4.1667, 4.1667, 5, 5 ! mean}

# Definir valores de la velocidad segun corresponda para cada iteración 
Main_Network.node[*].mobility.speed = 4.32 mps    #${speed= 3.3 mps, 3.7 mps, 4.32 mps, 4.63 mps, 5.36 mps , 5.84mps ! mean}       
#Main_Network.node[*].mobility.variability = 0.039   #${varia= 0.012,  0.243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo

#Activar RTT
Main_Network.node[*].appl.RTT_on = true

# Beaconing
Main_Network.node[*].appl.beaconing = true
Main_Network.numNodes = 4

# Potencia Suficiente
Main_Network.connectionManager.pMax = 0.01mW
Main_Network.node[*].nic.phy.maxTXPower = 0.01mW
Main_Network.node[*].nic.mac.txPower = 0.01mW

#Interval for sending position updates
Main_Network.node[*].appl.beaconInterval = 0.01 s

#Interval for running the platton 
Main_Network.node[*].appl.platoonInterval = 0.05 s
#repeat = 10

# Escenario para observar la inclusion del error humano sin error en el GPS incluido MultiSpeed
[Config ConGPS-error-MutiSpeed-Umbral] 

# Setear parametros de error de posición segun valor teórico
Main_Network.node[*].appl.GPS_error = true # Activa el error de GPS en el calculo del CACC
Main_Network.node[*].appl.position_error_a = 1.6 # Valor mas común en el error
Main_Network.node[*].appl.position_error_b = 2.5 # Define la desviación de los datos


# Parametros para aplicar multi-speed
Main_Network.node[*].mobility.MultiSpeed = true  
Main_Network.node[*].mobility.speedDuration = 60    #Lo que dura cada velocidad: speed, speed 2 y 3, considerar tiempo de simulación

Main_Network.node[*].mobility.speed = 2.77 mps
Main_Network.node[*].mobility.speed2 = 4.1667 mps
Main_Network.node[*].mobility.speed3 = 5 mps

# Definir valores para el error humano

# Valores obtenidos con la velocidad:   
#	LowSpeed -> mean=-0.1934, std=0.432			
#	MediumSpeed -> mean=0.214, std=0.46 
# 	HighSpeed -> mean=0.429, std=0.889 

# Valores obtenidos con error de la aceleración 
#	LowSpeed -> mean=-0.016428571, std=0.382897493			
#	MediumSpeed -> mean=-0.043688525, std=0.417270154 
# 	HighSpeed -> mean=0.009107143, std=0.3975228558

Main_Network.node[*].appl.mean_error_S1 = -0.016428571
Main_Network.node[*].appl.std_error_S1 = 0.382897493    

Main_Network.node[*].appl.mean_error_S2 = -0.043688525   
Main_Network.node[*].appl.std_error_S2 = 0.417270154    

Main_Network.node[*].appl.mean_error_S3 = 0.009107143  
Main_Network.node[*].appl.std_error_S3 = 0.3975228558


# Definir valores de la velocidad segun corresponda para cada iteración 
#Main_Network.node[*].mobility.speed = 4.32 mps    #${speed= 3.3 mps, 3.7 mps, 4.32 mps, 4.63 mps, 5.36 mps , 5.84mps ! mean}       
Main_Network.node[*].mobility.variability = 0.012  #0.001   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo
Main_Network.node[*].mobility.variability2 = 0.039   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo
Main_Network.node[*].mobility.variability3 = 0.095   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo

# Definir Valores del promedio para cada nodo en su respectiva velocidad
# Datos obtenidos de simulaciones anteriores

Main_Network.node[*].appl.MEANac_s1_n1 = 0
Main_Network.node[*].appl.MEANac_s2_n1 = 0
Main_Network.node[*].appl.MEANac_s3_n1 = 0
Main_Network.node[*].appl.MEANac_s1_n2 = 0
Main_Network.node[*].appl.MEANac_s2_n2 = 0
Main_Network.node[*].appl.MEANac_s3_n2 = 0
Main_Network.node[*].appl.MEANac_s1_n3 = 0
Main_Network.node[*].appl.MEANac_s2_n3 = 0
Main_Network.node[*].appl.MEANac_s3_n3 = 0

# Definir Valores de la desviación estandar para cada nodo en su respectiva velocidad
# Datos obtenidos de simulaciones anteriores

Main_Network.node[*].appl.STDac_s1_n1 = 0
Main_Network.node[*].appl.STDac_s2_n1 = 0
Main_Network.node[*].appl.STDac_s3_n1 = 0
Main_Network.node[*].appl.STDac_s1_n2 = 0
Main_Network.node[*].appl.STDac_s2_n2 = 0
Main_Network.node[*].appl.STDac_s3_n2 = 0
Main_Network.node[*].appl.STDac_s1_n3 = 0
Main_Network.node[*].appl.STDac_s2_n3 = 0
Main_Network.node[*].appl.STDac_s3_n3 = 0

# Definir umbral en la aceleración, deber ir entre 0 y 1 y corresponde a un porcentaje de la desviación estandar
Main_Network.node[*].appl.Thr_Ac = 0 #${STD = 0.25 , 0.33 , 0.5}
 
sim-time-limit = 540s #Este valor Debe ser seteado a partir de la operación = SpeedDuration * Numero de Repeticiones (3 para este caso) * Numero de Velocidades (3 para este caso) 


# Beaconing
Main_Network.node[*].appl.beaconing = true
Main_Network.numNodes = 4

# Potencia Suficiente
Main_Network.connectionManager.pMax = 4mW #0.5mW
Main_Network.node[*].nic.phy.maxTXPower = 4mW #0.5mW
Main_Network.node[*].nic.mac.txPower = 4mW #0.5mW

# Spacing
Main_Network.node[*].appl.spacing = 4

repeat = 30

[Config ConGPS-error-MutiSpeed-Umbral-STD] 

# Setear parametros de error de posición segun valor teórico
#Main_Network.node[*].appl.GPS_error = true # Activa el error de GPS en el calculo del CACC
#Main_Network.node[*].appl.position_error_a = 1.05  # Valor mas común en el error
#Main_Network.node[*].appl.position_error_b = 2.5 # Define la desviación de los datos

# Parametros para aplicar multi-speed
Main_Network.node[*].mobility.MultiSpeed = true  
Main_Network.node[*].mobility.speedDuration = 60    #Lo que dura cada velocidad: speed, speed 2 y 3, considerar tiempo de simulación

Main_Network.node[*].mobility.speed = 2.77 mps
Main_Network.node[*].mobility.speed2 = 4.1667 mps
Main_Network.node[*].mobility.speed3 = 5 mps

# Definir valores para el error humano

# Valores obtenidos con la velocidad:   
#	LowSpeed -> mean=-0.1934, std=0.432			
#	MediumSpeed -> mean=0.214, std=0.46 
# 	MediumSpeed -> mean=0.429, std=0.889 

# Valores obtenidos con error de la aceleración 
#	LowSpeed -> mean=-0.016428571, std=0.382897493			
#	MediumSpeed -> mean=-0.043688525, std=0.417270154 
# 	MediumSpeed -> mean=0.009107143, std=0.3975228558

Main_Network.node[*].appl.mean_error_S1 = -0.016428571
Main_Network.node[*].appl.std_error_S1 = 0.382897493    

Main_Network.node[*].appl.mean_error_S2 = -0.043688525   
Main_Network.node[*].appl.std_error_S2 = 0.417270154    

Main_Network.node[*].appl.mean_error_S3 = 0.009107143  
Main_Network.node[*].appl.std_error_S3 = 0.3975228558


# Definir valores de la velocidad segun corresponda para cada iteración 
#Main_Network.node[*].mobility.speed = 4.32 mps    #${speed= 3.3 mps, 3.7 mps, 4.32 mps, 4.63 mps, 5.36 mps , 5.84mps ! mean}       
Main_Network.node[*].mobility.variability = 0.001   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo
Main_Network.node[*].mobility.variability2 = 0.039   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo
Main_Network.node[*].mobility.variability3 = 0.095   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo

# Definir Valores del promedio para cada nodo en su respectiva velocidad
# Datos obtenidos de simulaciones anteriores, configuración Base, izquierda valor nuevo error 
#(en base a la Aceleración) , derecha antiguo en base a la velocidad de sujetos. 

Main_Network.node[*].appl.MEANac_s1_n1 = -0.0319 #-0.03210596
Main_Network.node[*].appl.MEANac_s2_n1 = 0.0388 #0.029049115
Main_Network.node[*].appl.MEANac_s3_n1 = 0.0093 #-0.00000746
Main_Network.node[*].appl.MEANac_s1_n2 = -0.0012 #-0.02542265
Main_Network.node[*].appl.MEANac_s2_n2 = 0.0591 #0.022859791
Main_Network.node[*].appl.MEANac_s3_n2 = 0.0213 #0.00499963
Main_Network.node[*].appl.MEANac_s1_n3 = -0.0036 #-0.02545595
Main_Network.node[*].appl.MEANac_s2_n3 = -0.0019 #0.021162147 	
Main_Network.node[*].appl.MEANac_s3_n3 = 0.0015 #0.012458228

# Definir Valores de la desviación estandar para cada nodo en su respectiva velocidad
# Datos obtenidos de simulaciones anteriores

Main_Network.node[*].appl.STDac_s1_n1 = 0.3871 #0.295657005
Main_Network.node[*].appl.STDac_s2_n1 = 0.3480 #0.252529212
Main_Network.node[*].appl.STDac_s3_n1 = 0.4444 #0.441132781
Main_Network.node[*].appl.STDac_s1_n2 = 0.4564 #0.199049252
Main_Network.node[*].appl.STDac_s2_n2 = 0.4483 #0.186657131
Main_Network.node[*].appl.STDac_s3_n2 = 0.4703 #0.276308827
Main_Network.node[*].appl.STDac_s1_n3 = 0.4548 #0.170798765
Main_Network.node[*].appl.STDac_s2_n3 = 0.4280 #0.170562699
Main_Network.node[*].appl.STDac_s3_n3 = 0.3814 #0.216995667

# Definir umbral en la aceleración, deber ir entre 0 y 1 y corresponde a un porcentaje de la desviación estandar
Main_Network.node[*].appl.Thr_Ac = ${STD = 0.25 , 0.33 , 0.5}
 
sim-time-limit = 540s #Este valor Debe ser seteado a partir de la operación = SpeedDuration * Numero de Repeticiones (3 para este caso) * Numero de Velocidades (3 para este caso) 


# Beaconing
Main_Network.node[*].appl.beaconing = true
Main_Network.numNodes = 4

# Potencia Suficiente
Main_Network.connectionManager.pMax = 4mW #2.5mW
Main_Network.node[*].nic.phy.maxTXPower = 4mW #2.5mW
Main_Network.node[*].nic.mac.txPower = 4mW #2.5mW

# Spacing
Main_Network.node[*].appl.spacing = 4

#repeat = 30

[Config SinGPS-error-Umbral-Base-PlatoonSize ] 

# Parametros para aplicar multi-speed
Main_Network.node[*].mobility.MultiSpeed = true 
Main_Network.node[*].mobility.speedDuration = 540    #Lo que dura cada velocidad: speed, speed 2 y 3, considerar tiempo de simulación

Main_Network.node[*].mobility.speed = 4.1667 mps #2.77 mps
Main_Network.node[*].mobility.speed2 = 4.1667 mps
Main_Network.node[*].mobility.speed3 = 4.1667 mps # 5 mps

Main_Network.node[*].appl.mean_error_S1 = -0.043688525
Main_Network.node[*].appl.std_error_S1 = 0.417270154    

#Main_Network.node[*].appl.mean_error_S2 = -0.043688525   
#Main_Network.node[*].appl.std_error_S2 = 0.417270154    

#Main_Network.node[*].appl.mean_error_S3 = 0.043688525  
#Main_Network.node[*].appl.std_error_S3 = 0.417270154


# Definir valores de la velocidad segun corresponda para cada iteración 
#Main_Network.node[*].mobility.speed = 4.32 mps    #${speed= 3.3 mps, 3.7 mps, 4.32 mps, 4.63 mps, 5.36 mps , 5.84mps ! mean}       
Main_Network.node[*].mobility.variability = ${varia= 0.05,0.2} #0.1, 0.15, 0.2, 0.25, 0.3}#0.039 #0.001   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo
Main_Network.node[*].mobility.variability2 = ${0.05,0.2 ! varia} #0.1, 0.15, 0.2, 0.25, 0.3 ! varia}#   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo
Main_Network.node[*].mobility.variability3 = ${ 0.05,0.2 ! varia} #0.1, 0.15, 0.2, 0.25, 0.3 ! varia}# 0.039 # 0.095   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo

# Definir Valores del promedio para cada nodo en su respectiva velocidad
# Datos obtenidos de simulaciones anteriores

Main_Network.node[*].appl.MEANac_n1 = 0 # 0.0388 #-0.03210596
Main_Network.node[*].appl.MEANac_n2 = 0 # 0.0388 #0.029049115
Main_Network.node[*].appl.MEANac_n3 = 0 # 0.0388 #-0.00000746
Main_Network.node[*].appl.MEANac_n4 = 0 # 0.0591 #-0.02542265
Main_Network.node[*].appl.MEANac_n5 = 0 # 0.0591 #0.022859791
Main_Network.node[*].appl.MEANac_n6 = 0 #0.0591 #0.00499963
Main_Network.node[*].appl.MEANac_n7 = 0 #-0.0019 #-0.02545595
Main_Network.node[*].appl.MEANac_n8 = 0 #-0.0019 #0.021162147 	
Main_Network.node[*].appl.MEANac_n9 = 0 #-0.0019 #0.012458228

# Definir Valores de la desviación estandar para cada nodo en su respectiva velocidad
# Datos obtenidos de simulaciones anteriores

Main_Network.node[*].appl.STDac_n1 = 0 #0.3480 #0.295657005
Main_Network.node[*].appl.STDac_n2 = 0 #0.3480 #0.252529212
Main_Network.node[*].appl.STDac_n3 = 0 #0.3480 #0.441132781
Main_Network.node[*].appl.STDac_n4 = 0 #0.4483 #0.199049252
Main_Network.node[*].appl.STDac_n5 = 0 #0.4483 #0.186657131
Main_Network.node[*].appl.STDac_n6 = 0 #0.4703 #0.276308827
Main_Network.node[*].appl.STDac_n7 = 0 #0.4548 #0.170798765
Main_Network.node[*].appl.STDac_n8 = 0 #0.4280 #0.170562699
Main_Network.node[*].appl.STDac_n9 = 0 #0.3814 #0.216995667

# Definir umbral en la aceleración, deber ir entre 0 y 1 y corresponde a un porcentaje de la desviación estandar
Main_Network.node[*].appl.Thr_Ac = 0
 
sim-time-limit = 540s #Este valor Debe ser seteado a partir de la operación = SpeedDuration * Numero de Repeticiones (3 para este caso) * Numero de Velocidades (3 para este caso) 


# Beaconing
Main_Network.node[*].appl.beaconing = true
Main_Network.numNodes = ${4,6,8,10,12,14,16,18,20,22,24,26,28,30} #,32,34,36,38,40}

# Potencia Suficiente
Main_Network.connectionManager.pMax =4mW #0.5mW
Main_Network.node[*].nic.phy.maxTXPower = 4mW #0.5mW
Main_Network.node[*].nic.mac.txPower = 4mW #0.5mW

# Spacing
Main_Network.node[*].appl.spacing = 4

repeat = 20

[Config SinGPS-error-Umbral-STD033-PlatoonSize ] 

**.vector-recording = false
# Parametros para aplicar multi-speed
Main_Network.node[*].mobility.MultiSpeed = true 
Main_Network.node[*].mobility.speedDuration = 540    #Lo que dura cada velocidad: speed, speed 2 y 3, considerar tiempo de simulación

Main_Network.node[*].mobility.speed = 4.1667 mps #2.77 mps
Main_Network.node[*].mobility.speed2 = 4.1667 mps
Main_Network.node[*].mobility.speed3 = 4.1667 mps # 5 mps

Main_Network.node[*].appl.mean_error_S1 = -0.043688525
Main_Network.node[*].appl.std_error_S1 = 0.417270154    

#Main_Network.node[*].appl.mean_error_S2 = -0.043688525   
#Main_Network.node[*].appl.std_error_S2 = 0.417270154    

#Main_Network.node[*].appl.mean_error_S3 = 0.043688525  
#Main_Network.node[*].appl.std_error_S3 = 0.417270154


# Definir valores de la velocidad segun corresponda para cada iteración 
#Main_Network.node[*].mobility.speed = 4.32 mps    #${speed= 3.3 mps, 3.7 mps, 4.32 mps, 4.63 mps, 5.36 mps , 5.84mps ! mean}       
Main_Network.node[*].mobility.variability = ${varia= 0.05, 0.1, 0.15, 0.2, 0.25, 0.3}#0.039 #0.001   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo
Main_Network.node[*].mobility.variability2 = ${0.05, 0.1, 0.15, 0.2, 0.25, 0.3 ! varia}#   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo
Main_Network.node[*].mobility.variability3 = ${ 0.05, 0.1, 0.15, 0.2, 0.25, 0.3 ! varia}# 0.039 # 0.095   #${varia= 0.012,  0.0243, 0.039, 0.097, 0.095, 0.033 ! mean}  #Variabilidad como valor porcentual de la velocidad objetivo

# Definir Valores del promedio para cada nodo en su respectiva velocidad
# Datos obtenidos de simulaciones anteriores

Main_Network.node[*].appl.MEANac_n1 = 0.04293 # 0.0388 #-0.03210596
Main_Network.node[*].appl.MEANac_n2 = 0.04588 # 0.0388 #0.029049115
Main_Network.node[*].appl.MEANac_n3 = 0.04687 # 0.0388 #-0.00000746
Main_Network.node[*].appl.MEANac_n4 = 0.04877 # 0.0591 #-0.02542265
Main_Network.node[*].appl.MEANac_n5 = 0.04980 # 0.0591 #0.022859791
Main_Network.node[*].appl.MEANac_n6 = 0.05433 #0.0591 #0.00499963
Main_Network.node[*].appl.MEANac_n7 = 0.05051 #-0.0019 #-0.02545595
Main_Network.node[*].appl.MEANac_n8 = 0.07598 #-0.0019 #0.021162147 	
Main_Network.node[*].appl.MEANac_n9 = 0.05316 #-0.0019 #0.012458228
Main_Network.node[*].appl.MEANac_n10 = 0.05641 # 0.0388 #-0.03210596
Main_Network.node[*].appl.MEANac_n11 = 0.07944 # 0.0388 #-0.03210596
Main_Network.node[*].appl.MEANac_n12 = 0.05640 # 0.0388 #0.029049115
Main_Network.node[*].appl.MEANac_n13 = 0.07367 # 0.0388 #-0.00000746
Main_Network.node[*].appl.MEANac_n14 = 0.08424 # 0.0591 #-0.02542265
Main_Network.node[*].appl.MEANac_n15 = 0.06042 # 0.0591 #0.022859791
Main_Network.node[*].appl.MEANac_n16 = 0.1 #0.0591 #0.00499963
Main_Network.node[*].appl.MEANac_n17 = 0.05871 #-0.0019 #-0.02545595
Main_Network.node[*].appl.MEANac_n18 = 0.07190 #-0.0019 #0.021162147 	
Main_Network.node[*].appl.MEANac_n19 = 0.06635 #-0.0019 #0.012458228
Main_Network.node[*].appl.MEANac_n20 = 0.05929 # 0.0388 #-0.03210596
Main_Network.node[*].appl.MEANac_n21 = 0.1033 # 0.0388 #-0.03210596
Main_Network.node[*].appl.MEANac_n22 = 0.1601 # 0.0388 #0.029049115
Main_Network.node[*].appl.MEANac_n23 = 0.04995 # 0.0388 #-0.00000746
Main_Network.node[*].appl.MEANac_n24 = 0.06125 # 0.0591 #-0.02542265
Main_Network.node[*].appl.MEANac_n25 = 0.1974 # 0.0591 #0.022859791
Main_Network.node[*].appl.MEANac_n26 = 0.08728 #0.0591 #0.00499963
Main_Network.node[*].appl.MEANac_n27 = 0.1412 #-0.0019 #-0.02545595
Main_Network.node[*].appl.MEANac_n28 = 0.02246 #-0.0019 #0.021162147 	
Main_Network.node[*].appl.MEANac_n29 = 0.3741 #-0.0019 #0.012458228

# Definir Valores de la desviación estandar para cada nodo en su respectiva velocidad
# Datos obtenidos de simulaciones anteriores

Main_Network.node[*].appl.STDac_n1 = 0.3606 #0.3480 #0.295657005
Main_Network.node[*].appl.STDac_n2 = 0.4047 #0.3480 #0.252529212
Main_Network.node[*].appl.STDac_n3 = 0.4419 #0.3480 #0.441132781
Main_Network.node[*].appl.STDac_n4 = 0.4818 #0.4483 #0.199049252
Main_Network.node[*].appl.STDac_n5 = 0.4942 #0.4483 #0.186657131
Main_Network.node[*].appl.STDac_n6 = 0.5166 #0.4703 #0.276308827
Main_Network.node[*].appl.STDac_n7 = 0.5300 #0.4548 #0.170798765
Main_Network.node[*].appl.STDac_n8 = 0.5608 #0.4280 #0.170562699
Main_Network.node[*].appl.STDac_n9 = 0.5539 #0.3814 #0.216995667
Main_Network.node[*].appl.STDac_n10 = 0.5587 #0.3480 #0.295657005
Main_Network.node[*].appl.STDac_n11 = 0.5855 #0.3480 #0.295657005
Main_Network.node[*].appl.STDac_n12 = 0.5725 #0.3480 #0.252529212
Main_Network.node[*].appl.STDac_n13 = 0.5799 #0.3480 #0.441132781
Main_Network.node[*].appl.STDac_n14 = 0.6037 #0.4483 #0.199049252
Main_Network.node[*].appl.STDac_n15 = 0.5892 #0.4483 #0.186657131
Main_Network.node[*].appl.STDac_n16 = 0.6311 #0.4703 #0.276308827
Main_Network.node[*].appl.STDac_n17 = 0.5910 #0.4548 #0.170798765
Main_Network.node[*].appl.STDac_n18 = 0.6071 #0.4280 #0.170562699
Main_Network.node[*].appl.STDac_n19 = 0.5927 #0.3814 #0.216995667
Main_Network.node[*].appl.STDac_n20 = 0.5982 #0.3480 #0.295657005
Main_Network.node[*].appl.STDac_n21 = 0.6293 #0.3480 #0.295657005
Main_Network.node[*].appl.STDac_n22 = 0.7092 #0.3480 #0.252529212
Main_Network.node[*].appl.STDac_n23 = 0.5994 #0.3480 #0.441132781
Main_Network.node[*].appl.STDac_n24 = 0.5997 #0.4483 #0.199049252
Main_Network.node[*].appl.STDac_n25 = 0.7384 #0.4483 #0.186657131
Main_Network.node[*].appl.STDac_n26 = 0.6197 #0.4703 #0.276308827
Main_Network.node[*].appl.STDac_n27 = 0.6995 #0.4548 #0.170798765
Main_Network.node[*].appl.STDac_n28 = 0.5522 #0.4280 #0.170562699
Main_Network.node[*].appl.STDac_n29 = 0.7451 #0.3814 #0.216995667

# Definir umbral en la aceleración, deber ir entre 0 y 1 y corresponde a un porcentaje de la desviación estandar
Main_Network.node[*].appl.Thr_Ac = 0.33
 
sim-time-limit = 540s #Este valor Debe ser seteado a partir de la operación = SpeedDuration * Numero de Repeticiones (3 para este caso) * Numero de Velocidades (3 para este caso) 


# Beaconing
Main_Network.node[*].appl.beaconing = true
Main_Network.numNodes = ${4,6,8,10,12,14,16,18,20,22,24,26,28,30}

# Potencia Suficiente
Main_Network.connectionManager.pMax = 4mW #0.5mW
Main_Network.node[*].nic.phy.maxTXPower = 4mW #0.5mW
Main_Network.node[*].nic.mac.txPower = 4mW #0.5mW

# Spacing
Main_Network.node[*].appl.spacing = 4

repeat = 20
